package com.mayreh.intellij.plugin.tlaplus;

import com.intellij.psi.tree.IElementType;

public interface TLAplusTokenType {
    // outside of the module block
    IElementType IGNORED = new TLAplusElementType("IGNORED");

    IElementType COMMENT_LINE = new TLAplusElementType("COMMENT_LINE");
    IElementType COMMENT_BLOCK = new TLAplusElementType("COMMENT_BLOCK");

    IElementType KEYWORD_ASSUME = new TLAplusElementType("ASSUME");
    IElementType KEYWORD_ELSE = new TLAplusElementType("ELSE");
    IElementType KEYWORD_LOCAL = new TLAplusElementType("LOCAL");
    IElementType KEYWORD_ASSUMPTION = new TLAplusElementType("ASSUMPTION");
    IElementType KEYWORD_MODULE = new TLAplusElementType("MODULE");
    IElementType KEYWORD_VARIABLE = new TLAplusElementType("VARIABLE");
    IElementType KEYWORD_AXIOM = new TLAplusElementType("AXIOM");
    IElementType KEYWORD_EXCEPT = new TLAplusElementType("EXCEPT");
    IElementType KEYWORD_OTHER = new TLAplusElementType("OTHER");
    IElementType KEYWORD_VARIABLES = new TLAplusElementType("VARIABLES");
    IElementType KEYWORD_CASE = new TLAplusElementType("CASE");
    IElementType KEYWORD_EXTENDS = new TLAplusElementType("EXTENDS");
    IElementType KEYWORD_SF_ = new TLAplusElementType("SF_");
    IElementType KEYWORD_WF_ = new TLAplusElementType("WF_");
    IElementType KEYWORD_CHOOSE = new TLAplusElementType("CHOOSE");
    IElementType KEYWORD_IF = new TLAplusElementType("IF");
    IElementType KEYWORD_WITH = new TLAplusElementType("WITH");
    IElementType KEYWORD_CONSTANT = new TLAplusElementType("CONSTANT");
    IElementType KEYWORD_IN = new TLAplusElementType("IN");
    IElementType KEYWORD_THEN = new TLAplusElementType("THEN");
    IElementType KEYWORD_CONSTANTS = new TLAplusElementType("CONSTANTS");
    IElementType KEYWORD_INSTANCE = new TLAplusElementType("INSTANCE");
    IElementType KEYWORD_THEOREM = new TLAplusElementType("THEOREM");
    IElementType KEYWORD_LET = new TLAplusElementType("LET");

    IElementType LITERAL_NUMBER = new TLAplusElementType("number");
    IElementType LITERAL_STRING = new TLAplusElementType("string");

    IElementType NL = new TLAplusElementType("new line");

    IElementType IDENTIFIER = new TLAplusElementType("identifier");

    IElementType LTUPLE = new TLAplusElementType("<<");
    IElementType RTUPLE = new TLAplusElementType(">>");
    IElementType RTUPLEUNDER = new TLAplusElementType(">>_");
    IElementType COMMA = new TLAplusElementType(",");
    IElementType SEPARATOR = new TLAplusElementType("----");
    IElementType MODULE_END = new TLAplusElementType("====");
    IElementType LPARENTHESIS = new TLAplusElementType("(");
    IElementType RPARENTHESIS = new TLAplusElementType(")");
    IElementType LBRACKET = new TLAplusElementType("{");
    IElementType RBRACKET = new TLAplusElementType("}");
    IElementType LSQBRACKET = new TLAplusElementType("[");
    IElementType RSQBRACKET = new TLAplusElementType("]");
    IElementType RSQBRACKETUNDER = new TLAplusElementType("]_");
    IElementType DOT = new TLAplusElementType(".");

    IElementType DEFINE = new TLAplusElementType("==");

    IElementType OP_ENABLED = new TLAplusElementType("ENABLED");
    IElementType OP_UNCHANGED = new TLAplusElementType("UNCHANGED");
    IElementType OP_POWERSET = new TLAplusElementType("SUBSET");
    IElementType OP_DOMAIN = new TLAplusElementType("DOMAIN");
    IElementType OP_UNION = new TLAplusElementType("UNION");
    IElementType OP_NEG = new TLAplusElementType("~");
    IElementType OP_SQUARE = new TLAplusElementType("[]");
    IElementType OP_DIAMOND = new TLAplusElementType("<>");
    IElementType OP_DASH = new TLAplusElementType("-");
    IElementType OP_LAND = new TLAplusElementType("/\\");
    IElementType OP_IN = new TLAplusElementType("\\in");
    IElementType OP_LT = new TLAplusElementType("<");
    IElementType OP_LTEQ = new TLAplusElementType("=<");
    IElementType OP_LTLT = new TLAplusElementType("\\ll");
    IElementType OP_PREC = new TLAplusElementType("\\prec");
    IElementType OP_PRECEQ = new TLAplusElementType("\\preceq");
    IElementType OP_SUBSETEQ = new TLAplusElementType("\\subseteq");
    IElementType OP_SUBSET = new TLAplusElementType("\\subset");
    IElementType OP_SQSUBSET = new TLAplusElementType("\\sqsubset");
    IElementType OP_SQSUBSETEQ = new TLAplusElementType("\\sqsubseteq");
    IElementType OP_VBARDASH = new TLAplusElementType("|-");
    IElementType OP_VBAREQ = new TLAplusElementType("|=");
    IElementType OP_DASHGT = new TLAplusElementType("->");
    IElementType OP_CAP = new TLAplusElementType("\\cap");
    IElementType OP_SQCAP = new TLAplusElementType("\\sqcap");
    IElementType OP_OPLUS = new TLAplusElementType("(+)");
    IElementType OP_OMINUS = new TLAplusElementType("(-)");
    IElementType OP_ODOT = new TLAplusElementType("(.)");
    IElementType OP_OTIMES = new TLAplusElementType("(\\X)");
    IElementType OP_OSLASH = new TLAplusElementType("(/)");
    IElementType OP_LOR = new TLAplusElementType("\\/");
    IElementType OP_EQUIV = new TLAplusElementType("<=>");
    IElementType OP_NOTIN = new TLAplusElementType("\\notin");
    IElementType OP_GT = new TLAplusElementType(">");
    IElementType OP_GTEQ = new TLAplusElementType(">=");
    IElementType OP_GTGT = new TLAplusElementType("\\gg");
    IElementType OP_SUCC = new TLAplusElementType("\\succ");
    IElementType OP_SUCCEQ = new TLAplusElementType("\\succeq");
    IElementType OP_SUPSETEQ = new TLAplusElementType("\\supseteq");
    IElementType OP_SUPSET = new TLAplusElementType("\\supset");
    IElementType OP_SQSUPSET = new TLAplusElementType("\\sqsupset");
    IElementType OP_SQSUPSETEQ = new TLAplusElementType("\\sqsupseteq");
    IElementType OP_DASHVBAR = new TLAplusElementType("\\-|");
    IElementType OP_EQVBAR = new TLAplusElementType("\\=|");
    IElementType OP_LTDASH = new TLAplusElementType("<-");
    IElementType OP_CUP = new TLAplusElementType("\\cup");
    IElementType OP_SQCUP = new TLAplusElementType("\\sqcup");
    IElementType OP_UPLUS = new TLAplusElementType("\\uplus");
    IElementType OP_X = new TLAplusElementType("\\X");
    IElementType OP_WR = new TLAplusElementType("\\wr");
    IElementType OP_PROPTO = new TLAplusElementType("\\propto");
    IElementType OP_EQGT = new TLAplusElementType("=>");
    IElementType OP_EQ = new TLAplusElementType("=");
    IElementType OP_NOTEQ = new TLAplusElementType("/=");
    IElementType OP_TILDEGT = new TLAplusElementType("~>");
    IElementType OP_DASHPLUSDASHGT = new TLAplusElementType("-+->");
    IElementType OP_VBARDASHGT = new TLAplusElementType("|->");
    IElementType OP_DIV = new TLAplusElementType("\\div");
    IElementType OP_CDOT = new TLAplusElementType("\\cdot");
    IElementType OP_CIRC = new TLAplusElementType("\\circ");
    IElementType OP_BULLET = new TLAplusElementType("\\bullet");
    IElementType OP_STAR = new TLAplusElementType("\\star");
    IElementType OP_BIGCIRC = new TLAplusElementType("\\bigcirc");
    IElementType OP_SIM = new TLAplusElementType("\\sim");
    IElementType OP_SIMEQ = new TLAplusElementType("\\simeq");
    IElementType OP_ASYMP = new TLAplusElementType("\\asymp");
    IElementType OP_APPROX = new TLAplusElementType("\\approx");
    IElementType OP_CONG = new TLAplusElementType("\\cong");
    IElementType OP_DOTEQ = new TLAplusElementType("\\doteq");
    IElementType OP_BANGBANG = new TLAplusElementType("!!");
    IElementType OP_SHARPSHARP = new TLAplusElementType("##");
    IElementType OP_DOLLAR = new TLAplusElementType("$");
    IElementType OP_DOLLARDOLLAR = new TLAplusElementType("$$");
    IElementType OP_PERCENT = new TLAplusElementType("%");
    IElementType OP_PERCENTPERCENT = new TLAplusElementType("%%");
    IElementType OP_AMP = new TLAplusElementType("&");
    IElementType OP_AMPAMP = new TLAplusElementType("&&");
    IElementType OP_ASTER = new TLAplusElementType("*");
    IElementType OP_ASTERASTER = new TLAplusElementType("**");
    IElementType OP_PLUS = new TLAplusElementType("+");
    IElementType OP_PLUSPLUS = new TLAplusElementType("++");
    IElementType OP_DASHDASH = new TLAplusElementType("--");
    IElementType OP_DOTDOT = new TLAplusElementType("..");
    IElementType OP_DOTDOTDOT = new TLAplusElementType("...");
    IElementType OP_SLASH = new TLAplusElementType("/");
    IElementType OP_SLASHSLASH = new TLAplusElementType("//");
    IElementType OP_COLONCOLONEQ = new TLAplusElementType("::=");
    IElementType OP_COLONEQ = new TLAplusElementType(":=");
    IElementType OP_COLONGT = new TLAplusElementType(":>");
    IElementType OP_LTCOLON = new TLAplusElementType("<:");
    IElementType OP_QUERY = new TLAplusElementType("?");
    IElementType OP_QUERYQUERY = new TLAplusElementType("??");
    IElementType OP_SUBTRACT = new TLAplusElementType("\\");
    IElementType OP_CARET = new TLAplusElementType("^");
    IElementType OP_CARETCARET = new TLAplusElementType("^^");
    IElementType OP_VBAR = new TLAplusElementType("|");
    IElementType OP_VBARVBAR = new TLAplusElementType("||");
    IElementType OP_PRIME = new TLAplusElementType("'");
    IElementType OP_CARETPLUS = new TLAplusElementType("^+");
    IElementType OP_CARETASTER = new TLAplusElementType("^*");
    IElementType OP_CARETSHARP = new TLAplusElementType("^#");

    IElementType QUANTIFIER_E = new TLAplusElementType("\\E");
    IElementType QUANTIFIER_EE = new TLAplusElementType("\\EE");
    IElementType QUANTIFIER_A = new TLAplusElementType("\\A");
    IElementType QUANTIFIER_AA = new TLAplusElementType("\\AA");
}
