FILE
  PsiComment(IGNORED)('Taken from https://lamport.azurewebsites.net/video/ABSpec.tla\n')
  TLAplusModuleHeaderImpl(MODULE_HEADER)
    PsiElement(MODULE_BEGIN)('------------------------------ MODULE')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('ABSpec')
    PsiWhiteSpace(' ')
    PsiElement(----)('--------------------------------')
  PsiWhiteSpace('\n')
  PsiElement(EXTENDS)('EXTENDS')
  PsiWhiteSpace(' ')
  PsiElement(identifier)('Integers')
  PsiWhiteSpace('\n\n')
  TLAplusConstantDeclImpl(CONSTANT_DECL)
    PsiElement(CONSTANT)('CONSTANT')
    PsiWhiteSpace(' ')
    TLAplusOpDeclImpl(OP_DECL)
      PsiElement(identifier)('Data')
  PsiWhiteSpace('  ')
  PsiComment(COMMENT_LINE)('\* The set of all possible data values.')
  PsiWhiteSpace('\n\n')
  TLAplusVariableDeclImpl(VARIABLE_DECL)
    PsiElement(VARIABLES)('VARIABLES')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('AVar')
    PsiElement(,)(',')
    PsiWhiteSpace('   ')
    PsiComment(COMMENT_LINE)('\* The last <<value, bit>> pair A decided to send.')
    PsiWhiteSpace('\n          ')
    PsiElement(identifier)('BVar')
  PsiWhiteSpace('    ')
  PsiComment(COMMENT_LINE)('\* The last <<value, bit>> pair B received.')
  PsiWhiteSpace('\n\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* Type correctness means that AVar and BVar are tuples <<d, i>> where     *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* d \in Data and i \in {0, 1}.                                            *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('TypeOK')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusJunctionListExprImpl(JUNCTION_LIST_EXPR)
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('AVar')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(\in)('\in')
        PsiWhiteSpace(' ')
        TLAplusCartesianProductExprImpl(CARTESIAN_PRODUCT_EXPR)
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('Data')
          PsiWhiteSpace(' ')
          PsiElement(\X)('\X')
          PsiWhiteSpace(' ')
          TLAplusSetExprImpl(SET_EXPR)
            PsiElement({)('{')
            TLAplusLiteralExprImpl(LITERAL_EXPR)
              PsiElement(number)('0')
            PsiElement(,)(',')
            TLAplusLiteralExprImpl(LITERAL_EXPR)
              PsiElement(number)('1')
            PsiElement(})('}')
      PsiWhiteSpace('\n          ')
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('BVar')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(\in)('\in')
        PsiWhiteSpace(' ')
        TLAplusCartesianProductExprImpl(CARTESIAN_PRODUCT_EXPR)
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('Data')
          PsiWhiteSpace(' ')
          PsiElement(\X)('\X')
          PsiWhiteSpace(' ')
          TLAplusSetExprImpl(SET_EXPR)
            PsiElement({)('{')
            TLAplusLiteralExprImpl(LITERAL_EXPR)
              PsiElement(number)('0')
            PsiElement(,)(',')
            TLAplusLiteralExprImpl(LITERAL_EXPR)
              PsiElement(number)('1')
            PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(* It's useful to define vars to be the tuple of all variables, for        *)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(* example so we can write [Next]_vars instead of [Next]_<< ...  >>        *)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
      PsiWhiteSpace('\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('vars')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusTupleExprImpl(TUPLE_EXPR)
      PsiElement(<<)('<<')
      PsiWhiteSpace(' ')
      TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
        PsiElement(identifier)('AVar')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
        PsiElement(identifier)('BVar')
      PsiWhiteSpace(' ')
      PsiElement(>>)('>>')
  PsiWhiteSpace('\n\n\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* Initially AVar can equal <<d, 1>> for any Data value d, and BVar equals *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* AVar.                                                                   *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('Init')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusJunctionListExprImpl(JUNCTION_LIST_EXPR)
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('AVar')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(\in)('\in')
        PsiWhiteSpace(' ')
        TLAplusCartesianProductExprImpl(CARTESIAN_PRODUCT_EXPR)
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('Data')
          PsiWhiteSpace(' ')
          PsiElement(\X)('\X')
          PsiWhiteSpace(' ')
          TLAplusSetExprImpl(SET_EXPR)
            PsiElement({)('{')
            TLAplusLiteralExprImpl(LITERAL_EXPR)
              PsiElement(number)('1')
            PsiElement(})('}')
      PsiWhiteSpace('\n        ')
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('BVar')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(=)('=')
        PsiWhiteSpace(' ')
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('AVar')
      PsiWhiteSpace('\n\n')
      PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(* When AVar = BVar, the sender can "send" an arbitrary data d item by     *)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(* setting AVar[1] to d and complementing AVar[2].  It then waits until    *)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(* the receiver "receives" the message by setting BVar to AVar before it   *)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(* can send its next message.  Sending is described by action A and        *)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(* receiving by action B.                                                  *)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
      PsiWhiteSpace('\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('A')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusJunctionListExprImpl(JUNCTION_LIST_EXPR)
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('AVar')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(=)('=')
        PsiWhiteSpace(' ')
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('BVar')
      PsiWhiteSpace('\n     ')
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusQuantifierExprImpl(QUANTIFIER_EXPR)
        PsiElement(\E)('\E')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('d')
        PsiWhiteSpace(' ')
        PsiElement(\in)('\in')
        PsiWhiteSpace(' ')
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('Data')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
          TLAplusPostfixOpExprImpl(POSTFIX_OP_EXPR)
            TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
              PsiElement(identifier)('AVar')
            TLAplusPostfixOpImpl(POSTFIX_OP)
              PsiElement(')(''')
          PsiWhiteSpace(' ')
          TLAplusInfixOpImpl(INFIX_OP)
            PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TLAplusTupleExprImpl(TUPLE_EXPR)
            PsiElement(<<)('<<')
            TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
              PsiElement(identifier)('d')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
              TLAplusLiteralExprImpl(LITERAL_EXPR)
                PsiElement(number)('1')
              PsiWhiteSpace(' ')
              TLAplusInfixOpImpl(INFIX_OP)
                PsiElement(-)('-')
              PsiWhiteSpace(' ')
              TLAplusApplyArgumentExprImpl(APPLY_ARGUMENT_EXPR)
                TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
                  PsiElement(identifier)('AVar')
                PsiElement([)('[')
                TLAplusLiteralExprImpl(LITERAL_EXPR)
                  PsiElement(number)('2')
                PsiElement(])(']')
            PsiElement(>>)('>>')
      PsiWhiteSpace('\n     ')
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusPostfixOpExprImpl(POSTFIX_OP_EXPR)
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('BVar')
          TLAplusPostfixOpImpl(POSTFIX_OP)
            PsiElement(')(''')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(=)('=')
        PsiWhiteSpace(' ')
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('BVar')
      PsiWhiteSpace('\n\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('B')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusJunctionListExprImpl(JUNCTION_LIST_EXPR)
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('AVar')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(/=)('#')
        PsiWhiteSpace(' ')
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('BVar')
      PsiWhiteSpace('\n     ')
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusPostfixOpExprImpl(POSTFIX_OP_EXPR)
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('BVar')
          TLAplusPostfixOpImpl(POSTFIX_OP)
            PsiElement(')(''')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(=)('=')
        PsiWhiteSpace(' ')
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('AVar')
      PsiWhiteSpace('\n     ')
      PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
        TLAplusPostfixOpExprImpl(POSTFIX_OP_EXPR)
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('AVar')
          TLAplusPostfixOpImpl(POSTFIX_OP)
            PsiElement(')(''')
        PsiWhiteSpace(' ')
        TLAplusInfixOpImpl(INFIX_OP)
          PsiElement(=)('=')
        PsiWhiteSpace(' ')
        TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
          PsiElement(identifier)('AVar')
      PsiWhiteSpace('\n\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('Next')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
      TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
        PsiElement(identifier)('A')
      PsiWhiteSpace(' ')
      TLAplusInfixOpImpl(INFIX_OP)
        PsiElement(\/)('\/')
      PsiWhiteSpace(' ')
      TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
        PsiElement(identifier)('B')
  PsiWhiteSpace('\n\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('Spec')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
      TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
        PsiElement(identifier)('Init')
      PsiWhiteSpace(' ')
      TLAplusInfixOpImpl(INFIX_OP)
        PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusPrefixOpExprImpl(PREFIX_OP_EXPR)
        TLAplusPrefixOpImpl(PREFIX_OP)
          PsiElement([])('[]')
        TLAplusActionExprImpl(ACTION_EXPR)
          PsiElement([)('[')
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('Next')
          PsiElement(]_)(']_')
          PsiElement(identifier)('vars')
  PsiWhiteSpace('\n\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* For understanding the spec, it's useful to define formulas that should  *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* be invariants and check that they are invariant.  The following         *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* invariant Inv asserts that, if AVar and BVar have equal second          *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* components, then they are equal (which by the invariance of TypeOK      *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* implies that they have equal first components).                         *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('Inv')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
      TLAplusParenExprImpl(PAREN_EXPR)
        PsiElement(()('(')
        TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
          TLAplusApplyArgumentExprImpl(APPLY_ARGUMENT_EXPR)
            TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
              PsiElement(identifier)('AVar')
            PsiElement([)('[')
            TLAplusLiteralExprImpl(LITERAL_EXPR)
              PsiElement(number)('2')
            PsiElement(])(']')
          PsiWhiteSpace(' ')
          TLAplusInfixOpImpl(INFIX_OP)
            PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TLAplusApplyArgumentExprImpl(APPLY_ARGUMENT_EXPR)
            TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
              PsiElement(identifier)('BVar')
            PsiElement([)('[')
            TLAplusLiteralExprImpl(LITERAL_EXPR)
              PsiElement(number)('2')
            PsiElement(])(']')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      TLAplusInfixOpImpl(INFIX_OP)
        PsiElement(=>)('=>')
      PsiWhiteSpace(' ')
      TLAplusParenExprImpl(PAREN_EXPR)
        PsiElement(()('(')
        TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('AVar')
          PsiWhiteSpace(' ')
          TLAplusInfixOpImpl(INFIX_OP)
            PsiElement(=)('=')
          PsiWhiteSpace(' ')
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('BVar')
        PsiElement())(')')
  PsiWhiteSpace('\n')
  PsiElement(----)('-----------------------------------------------------------------------------')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* FairSpec is Spec with the addition requirement that it keeps taking     *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(* steps.                                                                  *)')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT_BLOCK)('(***************************************************************************)')
  PsiWhiteSpace('\n')
  TLAplusOpDefinitionImpl(OP_DEFINITION)
    PsiElement(identifier)('FairSpec')
    PsiWhiteSpace(' ')
    PsiElement(==)('==')
    PsiWhiteSpace(' ')
    TLAplusInfixOpExprImpl(INFIX_OP_EXPR)
      TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
        PsiElement(identifier)('Spec')
      PsiWhiteSpace(' ')
      TLAplusInfixOpImpl(INFIX_OP)
        PsiElement(/\)('/\')
      PsiWhiteSpace(' ')
      TLAplusFairnessExprImpl(FAIRNESS_EXPR)
        PsiElement(WF_)('WF_')
        PsiElement(identifier)('vars')
        TLAplusOpArgsImpl(OP_ARGS)
          PsiElement(()('(')
          TLAplusIdentifierExprImpl(IDENTIFIER_EXPR)
            PsiElement(identifier)('Next')
          PsiElement())(')')
  PsiWhiteSpace('\n')
  PsiElement(====)('=============================================================================')
  PsiComment(IGNORED)('\n\* Modification History\n\* Last modified Wed Oct 18 04:07:37 PDT 2017 by lamport\n\* Created Fri Sep 04 07:08:22 PDT 2015 by lamport')
